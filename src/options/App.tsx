import { Select, Text, Toggle, useToasts } from '@geist-ui/core';
import { capitalize } from 'lodash-es';
import { useCallback, useEffect, useState } from 'preact/hooks';
import '../base.css';
import { getUserConfig, Language, updateUserConfig } from '../config';
import logo from '../logo.png';

function OptionsPage() {
  const [language, setLanguage] = useState<Language>(Language.Auto);
  const { setToast } = useToasts();

  useEffect(() => {
    getUserConfig().then((config) => {
      setLanguage(config.language);
    });
  }, []);

  const onLanguageChange = useCallback(
    (language: Language) => {
      updateUserConfig({ language });
      setToast({ text: 'Changes saved', type: 'success' });
    },
    [setToast],
  );

  return (
    <div className="container mx-auto">
      <nav className="flex flex-row justify-between items-center mt-5 px-2">
        <div className="flex flex-row items-center gap-2">
          <img src={logo} className="w-10 h-10 rounded-lg" />
          <span className="font-semibold">ChatGPT for Google Colab</span>
        </div>
        <div className="flex flex-row gap-3">
          <a href="https://github.com/ali-h-kudeir/ChatGPT-Google-Colab/issues" target="_blank" rel="noreferrer">
            Feedback
          </a>
          <a href="https://twitter.com/ali_h_kudeir" target="_blank" rel="noreferrer">
            Twitter
          </a>
          <a href="https://github.com/ali-h-kudeir/ChatGPT-Google-Colab" target="_blank" rel="noreferrer">
            Source code
          </a>
          <a href="https://www.producthunt.com/products/chatgpt-for-google-colab/" target="_blank" rel="noreferrer">
            ProductHunt
          </a>
        </div>
      </nav>
      <main className="w-[500px] mx-auto mt-14">
        <Text h3 className="mt-5 mb-1">
          Language
        </Text>
        <Text className="my-2">
          The language used in ChatGPT response. <span className="italic">Auto</span> is recommended.
        </Text>
        <Select value={language} placeholder="Choose one" onChange={(val) => onLanguageChange(val as Language)}>
          {Object.entries(Language).map(([k, v]) => (
            <Select.Option key={k} value={v}>
              {capitalize(v)}
            </Select.Option>
          ))}
        </Select>
        <div className="flex flex-row items-center gap-4 mt-3">
          <Toggle initialChecked disabled />
          <Text b margin={0}>
            Auto delete conversations generated by search
          </Text>
        </div>
      </main>
    </div>
  );
}

function App() {
  return <OptionsPage />;
}

export default App;
